from loader import dp

from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery
from aiogram.dispatcher.filters import Command

# config
from data.config import code

# re
import re

# db_commands
from handlers.db_commands import insert_db, update_db, select_db, delete_db

# state_machine
from states.statates import StateMachine

# marks
from kyeboards.marks import AdminMenu, EditWeekMenu, AddRemoveMenu, MembersMenu


@dp.message_handler(state=StateMachine.EditChoiceWeek)
async def mess(message: Message):
    # ----- start
    if message.text == "/start":
        await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!", reply_markup=AdminMenu)
        await StateMachine.Admin.set()
    # -----
    else:
        # ----- back
        if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å‚óÄÔ∏è":
            await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é...", reply_markup=AdminMenu)
            await StateMachine.Admin.set()
        # -----
        else:
            check = True
            try:
                delete_id = int(message.text)
            except:
                check = False

            if check:
                check = True
                try:
                    text = str(await select_db("notifiesweek", "delete_id", "text", delete_id))
                except:
                    check = False
                if check:
                    named_day = str(await select_db("notifiesweek", "delete_id", "named_day", delete_id))
                    if named_day == "Monday":
                        named_day = "–ø–Ω"
                    if named_day == "Tuesday":
                        named_day = "–≤—Ç"
                    if named_day == "Wednesday":
                        named_day = "—Å—Ä"
                    if named_day == "Thursday":
                        named_day = "—á—Ç"
                    if named_day == "Friday":
                        named_day = "–ø—Ç"
                    if named_day == "Saturday":
                        named_day = "—Å–±"
                    if named_day == "Sunday":
                        named_day = "–≤—Å"
                    hour = str(await select_db("notifiesweek", "delete_id", "hour", delete_id))
                    min = str(await select_db("notifiesweek", "delete_id", "min", delete_id))

                    all_members = ""
                    members_counter = 0
                    members_count = int(await select_db("notifiesweek", "delete_id", "members_count", delete_id))
                    while members_counter < members_count:
                        id_member = str(await select_db("notifiesweek", "delete_id", "id", delete_id)) + '#' + str(members_counter)
                        try:
                            member_name = str(await select_db("notifiesmembersweek", "id_member", "member_name", id_member))
                        except:
                            members_counter += 1
                            continue
                        all_members = all_members + member_name + ", "
                        members_counter += 1

                    all_members = all_members[:-2]

                    await update_db("admin", "code", "edit_notify_week", code, delete_id)

                    await message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏:\n"
                                         f"{delete_id}üí•{text}\n"
                                         f"–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ - {named_day}\n"
                                         f"–í—Ä–µ–º—è - {hour}:{min}\n"
                                         f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ - {all_members}", reply_markup=EditWeekMenu)
                    await message.answer("–ß—Ç–æ –±—É–¥–µ–º –º–µ–Ω—è—Ç—å?")
                    await StateMachine.EditMainWeek.set()
                else:
                    await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç‚úñÔ∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
            else:
                await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç‚úñÔ∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")


@dp.message_handler(state=StateMachine.EditMainWeek)
async def mess(message: Message):
    # ----- start
    if message.text == "/start":
        await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!", reply_markup=AdminMenu)
        await StateMachine.Admin.set()
    # -----

    # ----- back
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å‚óÄÔ∏è":
        await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é...", reply_markup=AdminMenu)
        await StateMachine.Admin.set()
    # -----

    if message.text == "–¢–µ–∫—Å—Ç‚úèÔ∏è":
        await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –¢–µ–∫—Å—Ç", reply_markup=ReplyKeyboardRemove())
        await StateMachine.TextWeek.set()

    if message.text == "–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏‚òÄÔ∏è":
        await message.answer("‚òÄÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏\n"
                             "–ü—Ä–∏–º–µ—Ä - –ø–Ω, –≤—Ç, —Å—Ä, —á—Ç, –ø—Ç, —Å–±, –≤—Å", reply_markup=ReplyKeyboardRemove())
        await StateMachine.DateWeek.set()

    if message.text == "–í—Ä–µ–º—èüïê":
        await message.answer("üïê –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –í—Ä–µ–º—è\n"
                             "–ü—Ä–∏–º–µ—Ä - 12 30", reply_markup=ReplyKeyboardRemove())
        await StateMachine.TimeWeek.set()

    if message.text == "C–æ—Ç—Ä—É–¥–Ω–∏–∫–∏üë®":
        await message.answer("üë® –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=AddRemoveMenu)
        await StateMachine.MembersChoiceWeek.set()

    if message.text == "–£–¥–∞–ª–∏—Ç—å‚ùå":
        delete_id = int(await select_db("admin", "code", "edit_notify_week", code))

        members_counter = 0
        members_count = int(await select_db("notifiesweek", "delete_id", "members_count", delete_id))
        while members_counter < members_count:
            id_member = str(await select_db("notifiesweek", "delete_id", "id", delete_id)) + '#' + str(members_counter)
            try:
                member_name = str(await select_db("notifiesmembersweek", "id_member", "member_name", id_member))
            except:
                members_counter += 1
                continue
            await delete_db("notifiesmembersweek", "id_member", id_member)
            members_counter += 1

        await delete_db("notifiesweek", "delete_id", delete_id)

        await message.answer("‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ", reply_markup=AdminMenu)
        await StateMachine.Admin.set()


@dp.message_handler(state=StateMachine.MembersChoiceWeek)
async def mess(message: Message):
    # ----- start
    if message.text == "/start":
        await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!", reply_markup=AdminMenu)
        await StateMachine.Admin.set()
    # -----

    # ----- back
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å‚óÄÔ∏è":
        await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é...", reply_markup=AdminMenu)
        await StateMachine.Admin.set()
    # -----

    if message.text == "–î–æ–±–∞–≤–∏—Ç—å‚úÖ":
        delete_id = int(await select_db("admin", "code", "edit_notify_week", code))

        all_members = ""
        members_counter = 0
        members_count = int(await select_db("notifiesweek", "delete_id", "members_count", delete_id))
        while members_counter < members_count:
            id_member = str(await select_db("notifiesweek", "delete_id", "id", delete_id)) + '#' + str(members_counter)
            try:
                member_name = str(await select_db("notifiesmembersweek", "id_member", "member_name", id_member))
            except:
                members_counter += 1
                continue
            all_members = all_members + member_name + ", "
            members_counter += 1

        all_members = all_members[:-2]

        await message.answer("üë® –í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")

        counter = 0
        delete_id_worker = 1
        workers_count = int(await select_db("admin", "code", "workers_count", code))
        while counter < workers_count:
            try:
                worker_name = str(await select_db("workers", "id", "worker_name", counter))
            except:
                counter += 1
                continue
            if all_members.find(worker_name) == -1:
                await message.answer(f"{delete_id_worker}. {worker_name}")
                await update_db("workers", "id", "delete_id", counter, delete_id_worker)
                delete_id_worker += 1
            counter += 1

        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:",
                             reply_markup=MembersMenu)
        await message.answer("–ö–æ–≥–¥–∞ –±—É–¥—É—Ç –≤—ã–±—Ä–∞–Ω—ã –≤—Å–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –Ω–∞–∂–º–∏—Ç–µ - –°—Ç–æ–ø‚õîÔ∏è")
        await StateMachine.MembersAddWeek.set()

    if message.text == "–£–¥–∞–ª–∏—Ç—å‚ùå":
        await message.answer("üë® –í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")

        delete_id = int(await select_db("admin", "code", "edit_notify_week", code))

        counter_members = 0
        delete_id_member = 1
        members_count = int(await select_db("notifiesweek", "delete_id", "members_count", delete_id))
        while counter_members < members_count:
            id_member = str(await select_db("notifiesweek", "delete_id", "id", delete_id)) + '#' + str(counter_members)
            try:
                member_name = str(await select_db("notifiesmembersweek", "id_member", "member_name", id_member))
            except:
                counter_members += 1
                continue

            await message.answer(f"{delete_id_member}. {member_name}")
            delete_id_member_table = str(delete_id) + '#' + str(delete_id_member)
            await update_db("notifiesmembersweek", "id_member", "delete_id", id_member, delete_id_member_table)
            delete_id_member += 1
            counter_members += 1

        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å‚ùå:", reply_markup=MembersMenu)
        await message.answer("–ö–æ–≥–¥–∞ –±—É–¥—É—Ç –≤—ã–±—Ä–∞–Ω—ã –≤—Å–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –Ω–∞–∂–º–∏—Ç–µ - –°—Ç–æ–ø‚õîÔ∏è")

        await StateMachine.MembersRemoveWeek.set()


@dp.message_handler(state=StateMachine.MembersAddWeek)
async def mess(message: Message):
    # ----- start
    if message.text == "/start":
        await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!", reply_markup=AdminMenu)
        await StateMachine.Admin.set()
    # -----
    else:
        if message.text == "–°—Ç–æ–ø‚õîÔ∏è":
            delete_id = int(await select_db("admin", "code", "edit_notify_week", code))

            all_members = ""
            members_counter = 0
            members_count = int(await select_db("notifiesweek", "delete_id", "members_count", delete_id))
            while members_counter < members_count:
                id_member = str(await select_db("notifiesweek", "delete_id", "id", delete_id)) + '#' + str(members_counter)
                try:
                    member_name = str(await select_db("notifiesmembersweek", "id_member", "member_name", id_member))
                except:
                    members_counter += 1
                    continue
                all_members = all_members + member_name + ", "
                members_counter += 1

            all_members = all_members[:-2]

            text = str(await select_db("notifiesweek", "delete_id", "text", delete_id))
            named_day = str(await select_db("notifiesweek", "delete_id", "named_day", delete_id))
            if named_day == "Monday":
                named_day = "–ø–Ω"
            if named_day == "Tuesday":
                named_day = "–≤—Ç"
            if named_day == "Wednesday":
                named_day = "—Å—Ä"
            if named_day == "Thursday":
                named_day = "—á—Ç"
            if named_day == "Friday":
                named_day = "–ø—Ç"
            if named_day == "Saturday":
                named_day = "—Å–±"
            if named_day == "Sunday":
                named_day = "–≤—Å"
            hour = str(await select_db("notifiesweek", "delete_id", "hour", delete_id))
            min = str(await select_db("notifiesweek", "delete_id", "min", delete_id))

            await message.answer(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ò–∑–º–µ–Ω–µ–Ω–æ:\n"
                                 f"{delete_id}üí•{text}\n"
                                 f"–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ - {named_day}\n"
                                 f"–í—Ä–µ–º—è - {hour}:{min}\n"
                                 f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ - {all_members}", reply_markup=EditWeekMenu)
            await message.answer("–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â–µ —á—Ç–æ-—Ç–æ?")

            await StateMachine.EditMainWeek.set()
        else:
            check = True
            try:
                delete_id = int(message.text)
            except:
                check = False

            if check:
                check = True
                try:
                    member_name = str(await select_db("workers", "delete_id", "worker_name", delete_id))
                except:
                    check = False
                if check:
                    id_notify = int(await select_db("admin", "code", "edit_notify_week", code))
                    id_member = str(await select_db("notifiesweek", "delete_id", "id", id_notify)) + '#' + str(
                        await select_db("notifiesweek", "delete_id", "members_count", id_notify))

                    await insert_db("notifiesmembersweek", "id_member", id_member)

                    await update_db("notifiesmembersweek", "id_member", "member_name", id_member, member_name)

                    await message.answer(f"‚úÖ {member_name}")

                    members_count = int(await select_db("notifiesweek", "delete_id", "members_count", id_notify)) + 1
                    await update_db("notifiesweek", "delete_id", "members_count", id_notify, members_count)

                    await update_db("workers", "delete_id", "delete_id", delete_id, -1)
                else:
                    await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç‚úñÔ∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
            else:
                await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç‚úñÔ∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")


@dp.message_handler(state=StateMachine.MembersRemoveWeek)
async def mess(message: Message):
    # ----- start
    if message.text == "/start":
        await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!", reply_markup=AdminMenu)
        await StateMachine.Admin.set()
    # -----
    else:
        if message.text == "–°—Ç–æ–ø‚õîÔ∏è":
            delete_id = int(await select_db("admin", "code", "edit_notify_week", code))

            all_members = ""
            members_counter = 0
            members_count = int(await select_db("notifiesweek", "delete_id", "members_count", delete_id))
            while members_counter < members_count:
                id_member = str(await select_db("notifiesweek", "delete_id", "id", delete_id)) + '#' + str(members_counter)
                try:
                    member_name = str(await select_db("notifiesmembersweek", "id_member", "member_name", id_member))
                except:
                    members_counter += 1
                    continue
                all_members = all_members + member_name + ", "
                members_counter += 1

            all_members = all_members[:-2]

            text = str(await select_db("notifiesweek", "delete_id", "text", delete_id))
            named_day = str(await select_db("notifiesweek", "delete_id", "named_day", delete_id))
            if named_day == "Monday":
                named_day = "–ø–Ω"
            if named_day == "Tuesday":
                named_day = "–≤—Ç"
            if named_day == "Wednesday":
                named_day = "—Å—Ä"
            if named_day == "Thursday":
                named_day = "—á—Ç"
            if named_day == "Friday":
                named_day = "–ø—Ç"
            if named_day == "Saturday":
                named_day = "—Å–±"
            if named_day == "Sunday":
                named_day = "–≤—Å"
            hour = str(await select_db("notifiesweek", "delete_id", "hour", delete_id))
            min = str(await select_db("notifiesweek", "delete_id", "min", delete_id))

            await message.answer(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ò–∑–º–µ–Ω–µ–Ω–æ:\n"
                                 f"{delete_id}üí•{text}\n"
                                 f"–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ - {named_day}\n"
                                 f"–í—Ä–µ–º—è - {hour}:{min}\n"
                                 f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ - {all_members}", reply_markup=EditWeekMenu)
            await message.answer("–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â–µ —á—Ç–æ-—Ç–æ?")

            await StateMachine.EditMainWeek.set()
        else:
            delete_id = int(await select_db("admin", "code", "edit_notify_week", code))

            check = True
            try:
                delete_id_member = int(message.text)
            except:
                check = False

            if check:
                delete_id_member = str(await select_db("notifiesweek", "delete_id", "id", delete_id)) + '#' + str(delete_id_member)
                check = True
                try:
                    member_name = str(await select_db("notifiesmembersweek", "delete_id", "member_name", delete_id_member))
                except:
                    check = False
                if check:
                    await delete_db("notifiesmembersweek", "delete_id", delete_id_member)
                    await message.answer(f"‚ùå {member_name} —É–¥–∞–ª–µ–Ω")
                else:
                    await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç‚úñÔ∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
            else:
                await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç‚úñÔ∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")


@dp.message_handler(state=StateMachine.TextWeek)
async def mess(message: Message):
    # ----- start
    if message.text == "/start":
        await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!", reply_markup=AdminMenu)
        await StateMachine.Admin.set()
    # -----
    else:
        delete_id = int(await select_db("admin", "code", "edit_notify_week", code))
        await update_db("notifiesweek", "delete_id", "text", delete_id, message.text)

        text = str(await select_db("notifiesweek", "delete_id", "text", delete_id))
        named_day = str(await select_db("notifiesweek", "delete_id", "named_day", delete_id))
        if named_day == "Monday":
            named_day = "–ø–Ω"
        if named_day == "Tuesday":
            named_day = "–≤—Ç"
        if named_day == "Wednesday":
            named_day = "—Å—Ä"
        if named_day == "Thursday":
            named_day = "—á—Ç"
        if named_day == "Friday":
            named_day = "–ø—Ç"
        if named_day == "Saturday":
            named_day = "—Å–±"
        if named_day == "Sunday":
            named_day = "–≤—Å"
        hour = str(await select_db("notifiesweek", "delete_id", "hour", delete_id))
        min = str(await select_db("notifiesweek", "delete_id", "min", delete_id))

        await message.answer(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ò–∑–º–µ–Ω–µ–Ω–æ:\n"
                             f"{delete_id}üí•{text}\n"
                             f"–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ - {named_day}\n"
                             f"–í—Ä–µ–º—è - {hour}:{min}", reply_markup=EditWeekMenu)
        await message.answer("–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â–µ —á—Ç–æ-—Ç–æ?")
        await StateMachine.EditMainWeek.set()


@dp.message_handler(state=StateMachine.DateWeek)
async def mess(message: Message):
    # ----- start
    if message.text == "/start":
        await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!", reply_markup=AdminMenu)
        await StateMachine.Admin.set()
    # -----
    else:
        date = message.text

        if date == "–ø–Ω" or date == "–≤—Ç" or date == "—Å—Ä" or date == "—á—Ç" or date == "–ø—Ç" or date == "—Å–±" or date == "–≤—Å":
            delete_id = int(await select_db("admin", "code", "edit_notify_week", code))
            if date == "–ø–Ω":
                await update_db("notifiesweek", "delete_id", "named_day", delete_id, "Monday")
            if date == "–≤—Ç":
                await update_db("notifiesweek", "delete_id", "named_day", delete_id, "Tuesday")
            if date == "—Å—Ä":
                await update_db("notifiesweek", "delete_id", "named_day", delete_id, "Wednesday")
            if date == "—á—Ç":
                await update_db("notifiesweek", "delete_id", "named_day", delete_id, "Thursday")
            if date == "–ø—Ç":
                await update_db("notifiesweek", "delete_id", "named_day", delete_id, "Friday")
            if date == "—Å–±":
                await update_db("notifiesweek", "delete_id", "named_day", delete_id, "Saturday")
            if date == "–≤—Å":
                await update_db("notifiesweek", "delete_id", "named_day", delete_id, "Sunday")

            text = str(await select_db("notifiesweek", "delete_id", "text", delete_id))
            named_day = str(await select_db("notifiesweek", "delete_id", "named_day", delete_id))
            if named_day == "Monday":
                named_day = "–ø–Ω"
            if named_day == "Tuesday":
                named_day = "–≤—Ç"
            if named_day == "Wednesday":
                named_day = "—Å—Ä"
            if named_day == "Thursday":
                named_day = "—á—Ç"
            if named_day == "Friday":
                named_day = "–ø—Ç"
            if named_day == "Saturday":
                named_day = "—Å–±"
            if named_day == "Sunday":
                named_day = "–≤—Å"
            hour = str(await select_db("notifiesweek", "delete_id", "hour", delete_id))
            min = str(await select_db("notifiesweek", "delete_id", "min", delete_id))

            await message.answer(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ò–∑–º–µ–Ω–µ–Ω–æ:\n"
                                 f"{delete_id}üí•{text}\n"
                                 f"–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ - {named_day}\n"
                                 f"–í—Ä–µ–º—è - {hour}:{min}", reply_markup=EditWeekMenu)
            await message.answer("–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â–µ —á—Ç–æ-—Ç–æ?")
            await StateMachine.EditMainWeek.set()
        else:
            await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç‚úñÔ∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")


@dp.message_handler(state=StateMachine.TimeWeek)
async def mess(message: Message):
    # ----- start
    if message.text == "/start":
        await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!", reply_markup=AdminMenu)
        await StateMachine.Admin.set()
    # -----
    else:
        check = True
        date = message.text
        try:
            date1 = int(re.sub(" ", "", date))
        except:
            check = False

        if check:
            delete_id = int(await select_db("admin", "code", "edit_notify_week", code))
            hour = str(date.split()[0])
            await update_db("notifiesweek", "delete_id", "hour", delete_id, hour)
            min = str(date.split()[1])
            await update_db("notifiesweek", "delete_id", "min", delete_id, min)

            text = str(await select_db("notifiesweek", "delete_id", "text", delete_id))
            named_day = str(await select_db("notifiesweek", "delete_id", "named_day", delete_id))
            if named_day == "Monday":
                named_day = "–ø–Ω"
            if named_day == "Tuesday":
                named_day = "–≤—Ç"
            if named_day == "Wednesday":
                named_day = "—Å—Ä"
            if named_day == "Thursday":
                named_day = "—á—Ç"
            if named_day == "Friday":
                named_day = "–ø—Ç"
            if named_day == "Saturday":
                named_day = "—Å–±"
            if named_day == "Sunday":
                named_day = "–≤—Å"
            hour = str(await select_db("notifiesweek", "delete_id", "hour", delete_id))
            min = str(await select_db("notifiesweek", "delete_id", "min", delete_id))

            await message.answer(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ò–∑–º–µ–Ω–µ–Ω–æ:\n"
                                 f"{delete_id}üí•{text}\n"
                                 f"–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ - {named_day}\n"
                                 f"–í—Ä–µ–º—è - {hour}:{min}", reply_markup=EditWeekMenu)
            await message.answer("–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ—â–µ —á—Ç–æ-—Ç–æ?")
            await StateMachine.EditMainWeek.set()
        else:
            await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç‚úñÔ∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
